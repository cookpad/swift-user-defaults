name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  SCHEME: "swift-user-defaults"
  XCODEBUILD: set -o pipefail && env NSUnbufferedIO=YES xcodebuild

jobs:
  test-macos:
    name: Test (macOS, Xcode ${{ matrix.xcode }})
    runs-on: ${{ matrix.macos }}
    env:
      DEVELOPER_DIR: '/Applications/Xcode_${{ matrix.xcode }}.app/Contents/Developer'
    strategy:
      matrix:
        xcode: [ 14.3.1, 15.2 ]
        include:
        - xcode: 14.3.1
          macos: macos-14
        - xcode: 15.2
          macos: macos-14
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v4
    - name: Test
      run: ${{ env.XCODEBUILD }} -scheme "${{ env.SCHEME }}" -destination "platform=macOS" clean test | xcbeautify

  test-ios:
    name: Test (iOS, Xcode ${{ matrix.xcode }})
    runs-on: ${{ matrix.macos }}
    env:
      DEVELOPER_DIR: '/Applications/Xcode_${{ matrix.xcode }}.app/Contents/Developer'
    strategy:
      matrix:
        xcode: [ 14.3.1, 15.2 ]
        include:
        - xcode: 14.3.1
          macos: macos-14
          destination: "platform=iOS Simulator,name=iPhone 14,OS=16.4"
        - xcode: 15.2
          macos: macos-14
          destination: "platform=iOS Simulator,name=iPhone 14,OS=17.2"
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v4
    - name: Test
      run: ${{ env.XCODEBUILD }} -scheme "${{ env.SCHEME }}" -destination "${{ matrix.destination }}" clean test | xcbeautify

  test-tvos:
    name: Test (tvOS, Xcode ${{ matrix.xcode }})
    runs-on: ${{ matrix.macos }}
    strategy:
      matrix:
        xcode: [ 14.3.1, 15.2 ]
        include:
        - xcode: 14.3.1
          macos: macos-14
          destination: "platform=tvOS Simulator,name=Apple TV,OS=16.4"
        - xcode: 15.2
          macos: macos-14
          destination: "platform=tvOS Simulator,name=Apple TV,OS=17.2"
    env:
      DEVELOPER_DIR: '/Applications/Xcode_${{ matrix.xcode }}.app/Contents/Developer'
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v4
    - name: Test
      run: ${{ env.XCODEBUILD }} -scheme "${{ env.SCHEME }}" -destination "${{ matrix.destination }}" clean test | xcbeautify

  test-watchos:
    name: Test (watchOS, Xcode ${{ matrix.xcode }})
    runs-on: ${{ matrix.macos }}
    strategy:
      matrix:
        xcode: [ 14.3.1, 15.2 ]
        include:
        - xcode: 14.3.1
          macos: macos-14
          destination: "platform=watchOS Simulator,name=Apple Watch Series 8 (41mm),OS=9.4"
        - xcode: 15.2
          macos: macos-14
          destination: "platform=watchOS Simulator,name=Apple Watch Series 9 (41mm),OS=10.2"
    env:
      DEVELOPER_DIR: '/Applications/Xcode_${{ matrix.xcode }}.app/Contents/Developer'
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v4
    - name: Test
      run: ${{ env.XCODEBUILD }} -scheme "${{ env.SCHEME }}" -destination "${{ matrix.destination }}" clean test | xcbeautify

  example:
    name: Example Project
    runs-on: macos-14
    env:
      DEVELOPER_DIR: '/Applications/Xcode_15.2.app/Contents/Developer'
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v4
    - name: UI Test
      run: ${{ env.XCODEBUILD }} -workspace "Example/Example.xcworkspace" -scheme "Example" -destination "platform=iOS Simulator,name=iPhone 14,OS=17.2" clean test | xcbeautify

  cocoapods:
    name: CocoaPods
    runs-on: macos-14
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v4
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true
    - name: Lint
      run: make lint
